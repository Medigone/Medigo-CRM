[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Commande Client",
  "enabled": 1,
  "modified": "2024-01-14 10:25:04.557498",
  "module": "CRM Medigo",
  "name": "Total ligne",
  "script": "frappe.ui.form.on(\"Articles Commande Client\", {\n    quantite: function(frm, cdt, cdn) {\n        updateTotal(frm, cdt, cdn);\n    },\n    prix: function(frm, cdt, cdn) {\n        updateTotal(frm, cdt, cdn);\n    },\n    refresh: function(frm) {\n        // your code here\n    }\n});\n\nfunction updateTotal(frm, cdt, cdn) {\n    var child_row = locals[cdt][cdn];\n    var quantite = child_row.quantite || 0;\n    var prix = child_row.prix || 0;\n    var total_row= quantite * prix;\n    frappe.model.set_value(cdt, cdn, 'total', total_row);\n    frm.refresh_field('total');\n}\n\nfrappe.ui.form.on('Articles Commande Client', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Commande Client",
  "enabled": 1,
  "modified": "2024-01-14 10:35:25.604664",
  "module": "CRM Medigo",
  "name": "Total Quantite Parent",
  "script": "\nfrappe.ui.form.on(\"Articles Commande Client\", {\n   total:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var quantite = 0;\n   frm.doc.produits.forEach(function(d) { quantite += d.quantite; });\n   frm.set_value(\"total_quantite\", quantite);\n   refresh_field(\"total_quantite\");\n },\n   articles_remove:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var total = 0;\n   frm.doc.produits.forEach(function(d) { quantite += d.quantite; });\n   frm.set_value(\"total_quantite\", quantite);\n   refresh_field(\"total_quantite\");\n   \t}\n   });\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Commande Client",
  "enabled": 1,
  "modified": "2024-01-14 10:33:38.509912",
  "module": "CRM Medigo",
  "name": "Total Commande",
  "script": "\n\nfrappe.ui.form.on(\"Articles Commande Client\", {\n   total:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var total = 0;\n   frm.doc.produits.forEach(function(d) { total += d.total; });\n   frm.set_value(\"total_commande\", total);\n   refresh_field(\"total_commande\");\n },\n   articles_remove:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var total = 0;\n   frm.doc.produits.forEach(function(d) { total += d.total; });\n   frm.set_value(\"total_commande\", total);\n   refresh_field(\"total_commande\");\n   \t}\n   });\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Commande Client",
  "enabled": 0,
  "modified": "2024-01-14 12:41:59.209062",
  "module": "CRM Medigo",
  "name": "Tarification",
  "script": "frappe.ui.form.on(\"Articles Commande Client\", \"produit\", function(frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n        frappe.db.get_value(\"Produits\", {\"name\": d.produit}, \"prix_dd\", function(value) {\n            d.prix = value.prix_dd;\n        });\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-04 15:19:04.954856",
  "module": "CRM Medigo",
  "name": "Filtre Articles",
  "script": "\nfrappe.ui.form.on('Visites Individuelles', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_1\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on('Visites Individuelles', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_2\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on('Visites Individuelles', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_3\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-04 15:33:38.232218",
  "module": "CRM Medigo",
  "name": "Filtre Services",
  "script": "\nfrappe.ui.form.on('Visites Services', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"service\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Services\",\"etablissement\", \"=\", frm.doc.etablissement]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-04 15:46:30.437672",
  "module": "CRM Medigo",
  "name": "Filtre Articles VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_1\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on('Visites Services', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_2\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on('Visites Services', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"objectif_produit_3\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Item\",\"item_group\", \"in\", [\"BIOMIL\"]]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-07 09:40:13.041083",
  "module": "CRM Medigo",
  "name": "VCI - Control",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est \"En Cours\" et si la géolocalisation n'a pas déjà été récupérée\n        if (frm.doc.workflow_state === \"En Cours\" && !frm.geolocation_fetched && !frm.doc.gps_visite) {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    var now = frappe.datetime.now_date();\n  \n                    // Mettre à jour le champ \"GPS Début Visite\" une seule fois\n                    frm.set_value('gps_visite', latitude + ', ' + longitude).then(() => {\n                        // Après mise à jour, marquer la géolocalisation comme récupérée\n                        frm.geolocation_fetched = true;\n                        frm.set_value(\"date_visite\", now);\n                        frm.refresh_field(\"date_visite\");\n                        cur_frm.save();\n\n                        // Afficher la position\n                        \n                        \n                    });\n                }, function(error) {\n                    frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                });\n            } else {\n                frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n            }\n        }\n    }\n    \n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-07 12:26:57.050287",
  "module": "CRM Medigo",
  "name": "VCI - Control Fin",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est passé à \"Terminée\" et si la géolocalisation n'a pas déjà été récupérée\n        \n            if (frm.doc.workflow_state === \"Terminée\" && !frm.doc.gps_fin_visite) {\n                if (\"geolocation\" in navigator) {\n                    navigator.geolocation.getCurrentPosition(function(position) {\n                        var latitude = position.coords.latitude;\n                        var longitude = position.coords.longitude;\n\n                        // Mettre à jour le champ \"GPS Fin Visite\" une seule fois\n                        frm.set_value('gps_fin_visite', latitude + ', ' + longitude).then(() => {\n                            // Après mise à jour, marquer la géolocalisation comme récupérée\n                            frm.geolocation_fetched = true;\n                            cur_frm.save();\n                           \n\n                           \n                        });\n                    }, function(error) {\n                        frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                    });\n                } else {\n                    frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n                }\n            }\n        \n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-03-04 10:53:31.082512",
  "module": "CRM Medigo",
  "name": "Filtre commercial",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh: function(frm) {\n        frm.set_query(\"delegue\", function() {\n            return {\n                filters: {\n                    \"role_profile_name\": [\"in\", [\"Délégue Commercial\",\"Délégué Médico-Commercial\"]]\n                }\n            };\n        });\n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-02-22 13:31:28.115297",
  "module": "Stock",
  "name": "Prix DD",
  "script": "frappe.ui.form.on(\"Item\", {\n  refresh: function(frm) {\n    if (frm.doc.item_code) {\n      frappe.call({\n        method: \"erpnext.stock.doctype.item.get_price\",\n        args: {\n          item_code: frm.doc.item_code,\n          price_list: \"DD\"\n        },\n        callback: function(r) {\n          if (r.message) {\n            frm.set_value(\"prix_dd\", r.message);\n          }\n        }\n      });\n    }\n  }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-02-22 13:25:19.774488",
  "module": "Stock",
  "name": "Prix Gros",
  "script": "frappe.ui.form.on(\"Item\", {\n  refresh: function(frm) {\n    if (frm.doc.item_code) {\n      frappe.call({\n        method: \"erpnext.selling.doctype.item.get_price\",\n        args: {\n          item_code: frm.doc.item_code,\n          price_list: \"Gros\"\n        },\n        callback: function(response) {\n          frm.set_value(\"prix_gros\", response.price);\n        }\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-18 14:43:13.453952",
  "module": "CRM Medigo",
  "name": "VMI - Control",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est \"En Cours\" et si la géolocalisation n'a pas déjà été récupérée\n        if (frm.doc.workflow_state === \"En Cours\" && !frm.geolocation_fetched && !frm.doc.gps_debut_visite) {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    var now = frappe.datetime.now_date();\n  \n                    // Mettre à jour le champ \"GPS Début Visite\" une seule fois\n                    frm.set_value('gps_debut_visite', latitude + ', ' + longitude).then(() => {\n                        // Après mise à jour, marquer la géolocalisation comme récupérée\n                        frm.geolocation_fetched = true;\n                        frm.set_value(\"date_visite\", now);\n                        \n                        frm.refresh_field(\"date_visite\");\n                        \n                        cur_frm.save();\n\n                        // Afficher la position\n                        \n                        \n                    });\n                }, function(error) {\n                    frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                });\n            } else {\n                frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n            }\n        }\n    }\n    \n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-09 19:21:52.367704",
  "module": "CRM Medigo",
  "name": "VMI - Control Fin",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est passé à \"Terminée\" et si la géolocalisation n'a pas déjà été récupérée\n        \n            if (frm.doc.workflow_state === \"Terminée\" && !frm.doc.gps_fin_visite) {\n                if (\"geolocation\" in navigator) {\n                    navigator.geolocation.getCurrentPosition(function(position) {\n                        var latitude = position.coords.latitude;\n                        var longitude = position.coords.longitude;\n\n                        // Mettre à jour le champ \"GPS Fin Visite\" une seule fois\n                        frm.set_value('gps_fin_visite', latitude + ', ' + longitude).then(() => {\n                            // Après mise à jour, marquer la géolocalisation comme récupérée\n                            frm.geolocation_fetched = true;\n                            cur_frm.save();\n                           \n\n                           \n                        });\n                    }, function(error) {\n                        frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                    });\n                } else {\n                    frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n                }\n            }\n        \n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-09 20:14:08.160400",
  "module": "CRM Medigo",
  "name": "VMS - Control",
  "script": "frappe.ui.form.on('Visites Services', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est \"En Cours\" et si la géolocalisation n'a pas déjà été récupérée\n        if (frm.doc.workflow_state === \"En Cours\" && !frm.geolocation_fetched && !frm.doc.gps_debut_visite) {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    var now = frappe.datetime.now_date();\n  \n                    // Mettre à jour le champ \"GPS Début Visite\" une seule fois\n                    frm.set_value('gps_debut_visite', latitude + ', ' + longitude).then(() => {\n                        // Après mise à jour, marquer la géolocalisation comme récupérée\n                        frm.geolocation_fetched = true;\n                        frm.set_value(\"date_visite\", now);\n                        frm.refresh_field(\"date_visite\");\n                        cur_frm.save();\n\n                        // Afficher la position\n                        \n                        \n                    });\n                }, function(error) {\n                    frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                });\n            } else {\n                frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n            }\n        }\n    }\n    \n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-09 20:14:49.052770",
  "module": "CRM Medigo",
  "name": "VMS - Control Fin",
  "script": "frappe.ui.form.on('Visites Services', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est passé à \"Terminée\" et si la géolocalisation n'a pas déjà été récupérée\n        \n            if (frm.doc.workflow_state === \"Terminée\" && !frm.doc.gps_fin_visite) {\n                if (\"geolocation\" in navigator) {\n                    navigator.geolocation.getCurrentPosition(function(position) {\n                        var latitude = position.coords.latitude;\n                        var longitude = position.coords.longitude;\n\n                        // Mettre à jour le champ \"GPS Fin Visite\" une seule fois\n                        frm.set_value('gps_fin_visite', latitude + ', ' + longitude).then(() => {\n                            // Après mise à jour, marquer la géolocalisation comme récupérée\n                            frm.geolocation_fetched = true;\n                            cur_frm.save();\n                           \n\n                           \n                        });\n                    }, function(error) {\n                        frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                    });\n                } else {\n                    frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n                }\n            }\n        \n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 0,
  "modified": "2024-02-10 12:06:41.955299",
  "module": "CRM Medigo",
  "name": "Filtre prsecripteurs",
  "script": "frappe.ui.form.on('Visites Services', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"Prescripteurs\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t[\"Prescripteurs\",\"service\", \"=\", frm.doc.service]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-23 12:42:19.038838",
  "module": "CRM Medigo",
  "name": "Auto populate Prescripteurs",
  "script": "frappe.ui.form.on('Visites Services', {\n    service: function(frm) {\n        let service = frm.doc.service;\n        \n        if(service){\n            frappe.call({\n                method: \"medigo.api.get_prescripteur\",\n                args: {\n                    service: service\n                }\n            }).done((r) => {\n                frm.clear_table(\"prescripteurs\");\n                $.each(r.message, function(_i, e){\n                    let entry = frm.add_child(\"prescripteurs\");\n                    entry.prescripteur = e.name;\n                    entry.objectif = e.objectif_visite; // Met à jour le champ objectif avec la valeur retournée.\n                });\n                refresh_field(\"prescripteurs\");\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Issue",
  "enabled": 1,
  "modified": "2024-02-12 20:17:41.169339",
  "module": "Support",
  "name": "Filtre Doctype - Tickets",
  "script": "frappe.ui.form.on('Issue', {\n    refresh: function(frm) {\n        frm.set_query(\"doc_type\", function() {\n            return {\n                filters: {\n                    \n    \"name\": [\"in\", [\"Visites Individuelles\", \"Visites Services\", \"Visite Medicale Duo\",\"Visite Medicale Manager\", \"Prescripteurs\", \"Etablissements\", \"Services\", \"Visite Commerciale\", \"Visite Commerciale Duo\", \"Visite Commerciale Manager\", \"Distributeurs\", \"Sales Order\", \"Item\", \"Customer\"]]\n                }\n            };\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-02-19 13:18:55.681804",
  "module": "Selling",
  "name": "Bouton creer",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        frm.add_custom_button(__('Commande Client'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Sales Order', {\n                // Pré-remplissage de quelques champs si nécessaire\n                customer: frm.doc.name // Pré-remplir le nom du client dans la nouvelle commande client\n                // Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});\n\nfrappe.ui.form.on('Customer', {\n    refresh(frm) {\n        frm.add_custom_button(__('Visite Commerciale'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Visite Commerciale', {\n                // Pré-remplissage de quelques champs si nécessaire\n                client: frm.doc.name // Pré-remplir le nom du client dans la nouvelle commande client\n                // Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Prescripteurs",
  "enabled": 1,
  "modified": "2024-02-19 13:21:27.947579",
  "module": "CRM Medigo",
  "name": "Bouton Visites Individuelles",
  "script": "frappe.ui.form.on('Prescripteurs', {\n    refresh(frm) {\n        frm.add_custom_button(__('Visites Individuelles'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Visites Individuelles', {\n                // Pré-remplissage de quelques champs si nécessaire\n                prescripteur: frm.doc.name // Pré-remplir le nom du client dans la nouvelle commande client\n                // Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-22 15:22:14.886200",
  "module": "CRM Medigo",
  "name": "Bouton commande",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    refresh(frm) {\n        frm.add_custom_button(__('Commande Client'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Sales Order', {\n                // Pré-remplissage de quelques champs si nécessaire\n                customer: frm.doc.client, // Pré-remplir le nom du client dans la nouvelle commande client\n                vci:frm.doc.name// Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-19 22:16:34.971885",
  "module": "CRM Medigo",
  "name": "Duree Visite",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    validate: function(frm) {\n        // Assurez-vous que les deux champs sont présents\n        if (frm.doc.heure_debut_visite && frm.doc.heure_fin_visite) {\n            let debut = moment(frm.doc.heure_debut_visite);\n            let fin = moment(frm.doc.heure_fin_visite);\n            let duree = moment.duration(fin.diff(debut));\n            let minutes = duree.asMinutes();\n            minutes = Math.round(minutes);\n            \n            // Mettre à jour le champ durée\n            frm.set_value('duree_visite', minutes);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-19 22:56:51.127309",
  "module": "CRM Medigo",
  "name": "Carte debut",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    refresh(frm) {\n        if (frm.doc.gps_debut_visite) {\n            const [latitude, longitude] = frm.doc.gps_debut_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_debut_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-19 23:25:16.551907",
  "module": "CRM Medigo",
  "name": "Carte Fin",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    refresh(frm) {\n        if (frm.doc.gps_fin_visite) {\n            const [latitude, longitude] = frm.doc.gps_fin_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_fin_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-19 23:00:10.554745",
  "module": "CRM Medigo",
  "name": "Duree VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    validate: function(frm) {\n        // Assurez-vous que les deux champs sont présents\n        if (frm.doc.heure_debut_visite && frm.doc.heure_fin_visite) {\n            let debut = moment(frm.doc.heure_debut_visite);\n            let fin = moment(frm.doc.heure_fin_visite);\n            let duree = moment.duration(fin.diff(debut));\n            let minutes = duree.asMinutes();\n            minutes = Math.round(minutes);\n            \n            // Mettre à jour le champ durée\n            frm.set_value('duree_visite', minutes);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-19 23:00:51.179130",
  "module": "CRM Medigo",
  "name": "Carte debut VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    refresh(frm) {\n        if (frm.doc.gps_debut_visite) {\n            const [latitude, longitude] = frm.doc.gps_debut_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_debut_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-19 23:24:44.103891",
  "module": "CRM Medigo",
  "name": "Carte Fin VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    refresh(frm) {\n        if (frm.doc.gps_fin_visite) {\n            const [latitude, longitude] = frm.doc.gps_fin_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_fin_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-19 23:17:12.380740",
  "module": "CRM Medigo",
  "name": "Duree Visite VCI",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    validate: function(frm) {\n        // Assurez-vous que les deux champs sont présents\n        if (frm.doc.heure_debut_visite && frm.doc.heure_fin_visite) {\n            let debut = moment(frm.doc.heure_debut_visite);\n            let fin = moment(frm.doc.heure_fin_visite);\n            let duree = moment.duration(fin.diff(debut));\n            let minutes = duree.asMinutes();\n            minutes = Math.round(minutes);\n            \n            // Mettre à jour le champ durée\n            frm.set_value('duree_visite', minutes);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-19 23:23:20.969566",
  "module": "CRM Medigo",
  "name": "Carte debut VCI",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    refresh(frm) {\n        if (frm.doc.gps_visite) {\n            const [latitude, longitude] = frm.doc.gps_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_debut_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-19 23:23:49.451101",
  "module": "CRM Medigo",
  "name": "Carte Fin VCI",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    refresh(frm) {\n        if (frm.doc.gps_fin_visite) {\n            const [latitude, longitude] = frm.doc.gps_fin_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_fin_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Prescripteurs",
  "enabled": 1,
  "modified": "2024-02-19 23:34:57.760626",
  "module": "CRM Medigo",
  "name": "GPS Prescripteur",
  "script": "frappe.ui.form.on('Prescripteurs', {\n    refresh(frm) {\n        // Ajouter un bouton dans la barre d'outils du formulaire\n        frm.add_custom_button('Récupérer GPS', function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'gps_prescripteur' avec les coordonnées GPS récupérées\n                    frm.set_value('gps_prescripteur', gpsCoords);\n\n                    // Optionnel : Afficher un message de succès\n                    frappe.msgprint(`Coordonnées GPS récupérées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Prescripteurs",
  "enabled": 1,
  "modified": "2024-02-19 23:38:53.220265",
  "module": "CRM Medigo",
  "name": "Carte Prescripteur",
  "script": "frappe.ui.form.on('Prescripteurs', {\n    refresh(frm) {\n        if (frm.doc.gps_prescripteur) {\n            const [latitude, longitude] = frm.doc.gps_prescripteur.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_prescripteur'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Etablissements",
  "enabled": 1,
  "modified": "2024-02-19 23:45:22.855852",
  "module": "CRM Medigo",
  "name": "GPS Etablissement",
  "script": "frappe.ui.form.on('Etablissements', {\n    refresh(frm) {\n        // Ajouter un bouton dans la barre d'outils du formulaire\n        frm.add_custom_button('Récupérer GPS', function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'gps_prescripteur' avec les coordonnées GPS récupérées\n                    frm.set_value('gps_etablissement', gpsCoords);\n\n                    // Optionnel : Afficher un message de succès\n                    frappe.msgprint(`Coordonnées GPS récupérées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Etablissements",
  "enabled": 1,
  "modified": "2024-02-19 23:47:33.374524",
  "module": "CRM Medigo",
  "name": "Carte Etablissement",
  "script": "frappe.ui.form.on('Etablissements', {\n    refresh(frm) {\n        if (frm.doc.gps_etablissement) {\n            const [latitude, longitude] = frm.doc.gps_etablissement.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_etablissement'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-02-19 23:52:15.473359",
  "module": "Selling",
  "name": "GPS Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        // Ajouter un bouton dans la barre d'outils du formulaire\n        frm.add_custom_button('Récupérer GPS', function() {\n            // Vérifier si la géolocalisation est prise en charge\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    // Récupérer les coordonnées GPS\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    const gpsCoords = `${lat}, ${lon}`;\n\n                    // Mettre à jour le champ 'gps_client' avec les coordonnées GPS récupérées\n                    frm.set_value('gps_client', gpsCoords);\n\n                    // Optionnel : Afficher un message de succès\n                    frappe.msgprint(`Coordonnées GPS récupérées : ${gpsCoords}`);\n                }, function(error) {\n                    // Gérer les erreurs\n                    frappe.msgprint(`Erreur lors de la récupération des coordonnées GPS : ${error.message}`);\n                }, {\n                    // Options de géolocalisation\n                    enableHighAccuracy: true,\n                    timeout: 5000,\n                    maximumAge: 0\n                });\n            } else {\n                frappe.msgprint(\"La géolocalisation n'est pas prise en charge par ce navigateur.\");\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-02-19 23:54:20.534581",
  "module": "Selling",
  "name": "Carte Client",
  "script": "frappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if (frm.doc.gps_client) {\n            const [latitude, longitude] = frm.doc.gps_client.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_client'].wrapper).html(`<iframe width=\"100%\" height=\"200\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-22 16:36:56.360515",
  "module": "CRM Medigo",
  "name": "Boutton Commande",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh(frm) {\n        frm.add_custom_button(__('Commande Client'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Sales Order', {\n                // Pré-remplissage de quelques champs si nécessaire\n                customer: frm.doc.client,\n                vcd: frm.doc.name// Pré-remplir le nom du client dans la nouvelle commande client\n                // Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-21 17:46:25.420806",
  "module": "CRM Medigo",
  "name": "Duree Visite VCD",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    validate: function(frm) {\n        // Assurez-vous que les deux champs sont présents\n        if (frm.doc.heure_debut_visite && frm.doc.heure_fin_visite) {\n            let debut = moment(frm.doc.heure_debut_visite);\n            let fin = moment(frm.doc.heure_fin_visite);\n            let duree = moment.duration(fin.diff(debut));\n            let minutes = duree.asMinutes();\n            minutes = Math.round(minutes);\n            \n            // Mettre à jour le champ durée\n            frm.set_value('duree_visite', minutes);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-21 17:50:38.879755",
  "module": "CRM Medigo",
  "name": "Carte debut VCD",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh(frm) {\n        if (frm.doc.gps_debut_visite) {\n            const [latitude, longitude] = frm.doc.gps_debut_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_debut_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-21 17:47:54.467443",
  "module": "CRM Medigo",
  "name": "Carte Fin VCD",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh(frm) {\n        if (frm.doc.gps_fin_visite) {\n            const [latitude, longitude] = frm.doc.gps_fin_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_fin_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-21 17:49:14.953581",
  "module": "CRM Medigo",
  "name": "VCD - Control",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est \"En Cours\" et si la géolocalisation n'a pas déjà été récupérée\n        if (frm.doc.workflow_state === \"En Cours\" && !frm.geolocation_fetched && !frm.doc.gps_debut_visite) {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    var now = frappe.datetime.now_date();\n  \n                    // Mettre à jour le champ \"GPS Début Visite\" une seule fois\n                    frm.set_value('gps_debut_visite', latitude + ', ' + longitude).then(() => {\n                        // Après mise à jour, marquer la géolocalisation comme récupérée\n                        frm.geolocation_fetched = true;\n                        frm.set_value(\"date_visite\", now);\n                        frm.refresh_field(\"date_visite\");\n                        cur_frm.save();\n\n                        // Afficher la position\n                        \n                        \n                    });\n                }, function(error) {\n                    frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                });\n            } else {\n                frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n            }\n        }\n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-21 17:49:56.669055",
  "module": "CRM Medigo",
  "name": "VCD - Control Fin",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est passé à \"Terminée\" et si la géolocalisation n'a pas déjà été récupérée\n        \n            if (frm.doc.workflow_state === \"Terminée\" && !frm.doc.gps_fin_visite) {\n                if (\"geolocation\" in navigator) {\n                    navigator.geolocation.getCurrentPosition(function(position) {\n                        var latitude = position.coords.latitude;\n                        var longitude = position.coords.longitude;\n\n                        // Mettre à jour le champ \"GPS Fin Visite\" une seule fois\n                        frm.set_value('gps_fin_visite', latitude + ', ' + longitude).then(() => {\n                            // Après mise à jour, marquer la géolocalisation comme récupérée\n                            frm.geolocation_fetched = true;\n                            cur_frm.save();\n                           \n\n                           \n                        });\n                    }, function(error) {\n                        frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                    });\n                } else {\n                    frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n                }\n            }\n        \n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-21 19:38:46.923078",
  "module": "CRM Medigo",
  "name": "Carte debut VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    refresh(frm) {\n        if (frm.doc.gps_debut_visite) {\n            const [latitude, longitude] = frm.doc.gps_debut_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_debut_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:0\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-21 19:39:31.842392",
  "module": "CRM Medigo",
  "name": "VCM - Control Fin",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est passé à \"Terminée\" et si la géolocalisation n'a pas déjà été récupérée\n        \n            if (frm.doc.workflow_state === \"Terminée\" && !frm.doc.gps_fin_visite) {\n                if (\"geolocation\" in navigator) {\n                    navigator.geolocation.getCurrentPosition(function(position) {\n                        var latitude = position.coords.latitude;\n                        var longitude = position.coords.longitude;\n\n                        // Mettre à jour le champ \"GPS Fin Visite\" une seule fois\n                        frm.set_value('gps_fin_visite', latitude + ', ' + longitude).then(() => {\n                            // Après mise à jour, marquer la géolocalisation comme récupérée\n                            frm.geolocation_fetched = true;\n                            cur_frm.save();\n                           \n\n                           \n                        });\n                    }, function(error) {\n                        frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                    });\n                } else {\n                    frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n                }\n            }\n        \n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-21 19:40:14.160148",
  "module": "CRM Medigo",
  "name": "VCM - Control",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    refresh: function(frm) {\n        // Vérifier si l'état du workflow est \"En Cours\" et si la géolocalisation n'a pas déjà été récupérée\n        if (frm.doc.workflow_state === \"En Cours\" && !frm.geolocation_fetched && !frm.doc.gps_debut_visite) {\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    var latitude = position.coords.latitude;\n                    var longitude = position.coords.longitude;\n                    var now = frappe.datetime.now_date();\n  \n                    // Mettre à jour le champ \"GPS Début Visite\" une seule fois\n                    frm.set_value('gps_debut_visite', latitude + ', ' + longitude).then(() => {\n                        // Après mise à jour, marquer la géolocalisation comme récupérée\n                        frm.geolocation_fetched = true;\n                        frm.set_value(\"date_visite\", now);\n                        frm.refresh_field(\"date_visite\");\n                        cur_frm.save();\n\n                        // Afficher la position\n                        \n                        \n                    });\n                }, function(error) {\n                    frappe.msgprint(__('Erreur lors de la récupération de la localisation : {0}', [error.message]));\n                });\n            } else {\n                frappe.msgprint(__('La géolocalisation n\\'est pas prise en charge par votre navigateur.'));\n            }\n        }\n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-21 19:40:45.214085",
  "module": "CRM Medigo",
  "name": "Carte Fin VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    refresh(frm) {\n        if (frm.doc.gps_fin_visite) {\n            const [latitude, longitude] = frm.doc.gps_fin_visite.split(\", \");\n            const mapUrl = `https://www.google.com/maps/embed/v1/place?key=AIzaSyBhtddbDMEu4OoBJAxlfYADptjTspOqflw&q=${latitude},${longitude}&zoom=15`;\n\n            $(frm.fields_dict['carte_fin_visite'].wrapper).html(`<iframe width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border:1\" src=\"${mapUrl}\" allowfullscreen></iframe>`);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-21 19:41:30.907794",
  "module": "CRM Medigo",
  "name": "Duree Visite VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    validate: function(frm) {\n        // Assurez-vous que les deux champs sont présents\n        if (frm.doc.heure_debut_visite && frm.doc.heure_fin_visite) {\n            let debut = moment(frm.doc.heure_debut_visite);\n            let fin = moment(frm.doc.heure_fin_visite);\n            let duree = moment.duration(fin.diff(debut));\n            let minutes = duree.asMinutes();\n            minutes = Math.round(minutes);\n            \n            // Mettre à jour le champ durée\n            frm.set_value('duree_visite', minutes);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-22 16:03:22.820030",
  "module": "CRM Medigo",
  "name": "Boutton Commande VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    refresh(frm) {\n        frm.add_custom_button(__('Commande Client'), function () {\n            // Logique pour créer une nouvelle commande client\n            frappe.new_doc('Sales Order', {\n                // Pré-remplissage de quelques champs si nécessaire\n                customer: frm.doc.client, // Pré-remplir le nom du client dans la nouvelle commande client\n                vcm:frm.doc.name// Vous pouvez ajouter d'autres champs ici\n            });\n        }, __('Create'));\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-22 17:37:19.673577",
  "module": "CRM Medigo",
  "name": "Note Visite",
  "script": "frappe.ui.form.on('Visite Commerciale Duo', {\n    ponctualite: function(frm) {\n        calculer_moyenne(frm);\n    },\n    adaptation_application: function(frm) {\n        calculer_moyenne(frm);\n    },\n    connaissances_commerciales: function(frm) {\n        calculer_moyenne(frm);\n    },\n    connaissances_produits: function(frm) {\n        calculer_moyenne(frm);\n    },\n    autonomie: function(frm) {\n        calculer_moyenne(frm);\n    },\n    remontee_information: function(frm) {\n        calculer_moyenne(frm);\n    },\n    relationnel: function(frm) {\n        calculer_moyenne(frm);\n    },\n    gestion_temps: function(frm) {\n        calculer_moyenne(frm);\n    },\n    preparation_visite: function(frm) {\n        calculer_moyenne(frm);\n    },\n});\n\nfunction calculer_moyenne(frm) {\n    const champs_notes = [\n        'ponctualite',\n        'adaptation_application',\n        'connaissances_commerciales',\n        'connaissances_produits',\n        'autonomie',\n        'remontee_information',\n        'relationnel',\n        'gestion_temps',\n        'preparation_visite'\n    ];\n\n    let somme_notes = 0;\n    let nombre_notes = champs_notes.length;\n\n    champs_notes.forEach(champ => {\n        let note = frm.doc[champ] || 0;\n        somme_notes += parseInt(note, 10);\n    });\n\n    let moyenne = somme_notes / nombre_notes;\n    frm.set_value('note_visite', moyenne.toFixed(2)); // Arrondir à deux décimales\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-23 10:30:41.782568",
  "module": "CRM Medigo",
  "name": "Utilisateur",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-23 10:37:21.786445",
  "module": "CRM Medigo",
  "name": "Utilisateur VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-23 11:18:18.455116",
  "module": "CRM Medigo",
  "name": "Objectifs Produits VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    validate(frm) {\n        // Récupérer les valeurs des champs\n        let objectif_produit_1 = frm.doc.objectif_produit_1;\n        let objectif_produit_2 = frm.doc.objectif_produit_2;\n        let objectif_produit_3 = frm.doc.objectif_produit_3;\n\n        // Créer un tableau avec les valeurs (filtrer les undefined ou les champs vides)\n        let produits = [objectif_produit_1, objectif_produit_2, objectif_produit_3].filter(Boolean);\n\n        // Vérifier l'unicité des valeurs en comparant la longueur du tableau\n        // des produits avec celle du Set (qui élimine les doublons)\n        if (produits.length !== new Set(produits).size) {\n            frappe.msgprint(__('Un même Produit ne peut être sélectionné plus d’une fois.'));\n            frappe.validated = false; // Empêcher la sauvegarde du document\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-23 11:18:11.759913",
  "module": "CRM Medigo",
  "name": "Objectifs Produits VMI",
  "script": "frappe.ui.form.on('Visites Individuelles', {\n    validate(frm) {\n        // Récupérer les valeurs des champs\n        let objectif_produit_1 = frm.doc.objectif_produit_1;\n        let objectif_produit_2 = frm.doc.objectif_produit_2;\n        let objectif_produit_3 = frm.doc.objectif_produit_3;\n\n        // Créer un tableau avec les valeurs (filtrer les undefined ou les champs vides)\n        let produits = [objectif_produit_1, objectif_produit_2, objectif_produit_3].filter(Boolean);\n\n        // Vérifier l'unicité des valeurs en comparant la longueur du tableau\n        // des produits avec celle du Set (qui élimine les doublons)\n        if (produits.length !== new Set(produits).size) {\n            frappe.msgprint(__('Un même Produit ne peut être sélectionné plus d’une fois.'));\n            frappe.validated = false; // Empêcher la sauvegarde du document\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-23 11:33:29.441195",
  "module": "CRM Medigo",
  "name": "Classement Produits",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    validate(frm) {\n        // Validation pour l'unicité et la contrainte de non-nullité\n        let classements = [\n            frm.doc.classement_1, \n            frm.doc.classement_2, \n            frm.doc.classement_3, \n            frm.doc.classement_4\n        ].filter(Boolean); // Filtrer les valeurs non définies ou vides\n\n        if (classements.length !== new Set(classements).size) {\n            frappe.msgprint(__('Un même article ne peut être sélectionné plus d’une fois dans les champs de classement.'));\n            frappe.validated = false;\n        }\n\n        let rotations = [\n            {field: 'classement_1', rotation: frm.doc.rotation_c1},\n            {field: 'classement_2', rotation: frm.doc.rotation_c2},\n            {field: 'classement_3', rotation: frm.doc.rotation_c3},\n            {field: 'classement_4', rotation: frm.doc.rotation_c4}\n        ];\n\n        rotations.forEach((item, index) => {\n            if (frm.doc[item.field] && item.rotation === 0) {\n                frappe.msgprint(__(`Si un article est sélectionné dans ${item.field}, alors \"rotation_c${index + 1}\" ne doit pas être \"0\".`));\n                frappe.validated = false;\n            }\n        });\n\n        // Validation pour la comparaison séquentielle des rotations\n        for (let i = 0; i < rotations.length - 1; i++) {\n            if (rotations[i].rotation < rotations[i + 1].rotation) {\n                frappe.msgprint(__(`La rotation de \"${rotations[i + 1].field}\" ne peut pas être supérieure à celle de \"${rotations[i].field}\".`));\n                frappe.validated = false;\n                break; // Sortir de la boucle dès qu'une violation est trouvée\n            }\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-23 12:21:06.622522",
  "module": "CRM Medigo",
  "name": "Utilisateur VCI",
  "script": "frappe.ui.form.on('Visite Commerciale', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Services",
  "enabled": 1,
  "modified": "2024-02-23 12:38:23.311596",
  "module": "CRM Medigo",
  "name": "Auto Objectif VMS",
  "script": "frappe.ui.form.on('Visites Services', {\n    validate: function(frm) {\n        // Boucle sur chaque ligne de la table \"Prescripteurs Visite\"\n        $.each(frm.doc.prescripteurs_visite || [], function(i, d) {\n            // 'prescripteurs_visite' est le nom de la table dans votre doctype 'Visites Services'\n            // Assurez-vous de remplacer 'prescripteurs_visite' par le nom exact si différent\n            d.objectif = frm.doc.objectif_visite;\n            // 'objectif_visite' est le champ dans le doctype parent que vous voulez copier\n            // 'objectif' est le champ dans la ligne de la table enfant où vous voulez copier la valeur\n        });\n        \n        // Rafraîchit la table pour mettre à jour les valeurs affichées dans l'interface utilisateur\n        refresh_field('prescripteurs_visite');\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-03-06 15:37:05.215122",
  "module": "CRM Medigo",
  "name": "Utilisateur Commande",
  "script": "frappe.ui.form.on('Sales Order', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('custom_utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-23 15:49:01.062938",
  "module": "CRM Medigo",
  "name": "Utilisateur VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale",
  "enabled": 1,
  "modified": "2024-02-23 16:02:07.935315",
  "module": "CRM Medigo",
  "name": "Client remis auto",
  "script": "frappe.ui.form.on('Remis Commercial', {\n    refresh(frm) {\n        // Ceci est appelé à chaque fois que le formulaire est chargé ou rafraîchi\n    },\n    // Écouteur pour les changements dans la table enfant \"liste_remis\"\n    liste_remis_add(frm, cdt, cdn) {\n        let d = locals[cdt][cdn];\n        // Mise à jour du champ \"client\" dans la ligne ajoutée avec la valeur du champ \"client\" du doctype parent\n        frappe.model.set_value(cdt, cdn, 'client', frm.doc.client);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Duo",
  "enabled": 1,
  "modified": "2024-02-23 16:05:05.749280",
  "module": "CRM Medigo",
  "name": "Remis auto VCD",
  "script": "frappe.ui.form.on('Remis Commercial', {\n    refresh(frm) {\n        // Ceci est appelé à chaque fois que le formulaire est chargé ou rafraîchi\n    },\n    // Écouteur pour les changements dans la table enfant \"liste_remis\"\n    liste_remis_add(frm, cdt, cdn) {\n        let d = locals[cdt][cdn];\n        // Mise à jour du champ \"client\" dans la ligne ajoutée avec la valeur du champ \"client\" du doctype parent\n        frappe.model.set_value(cdt, cdn, 'client', frm.doc.client);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-23 16:06:02.555196",
  "module": "CRM Medigo",
  "name": "Remis auto VCM",
  "script": "frappe.ui.form.on('Remis Commercial', {\n    refresh(frm) {\n        // Ceci est appelé à chaque fois que le formulaire est chargé ou rafraîchi\n    },\n    // Écouteur pour les changements dans la table enfant \"liste_remis\"\n    liste_remis_add(frm, cdt, cdn) {\n        let d = locals[cdt][cdn];\n        // Mise à jour du champ \"client\" dans la ligne ajoutée avec la valeur du champ \"client\" du doctype parent\n        frappe.model.set_value(cdt, cdn, 'client', frm.doc.client);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visites Individuelles",
  "enabled": 1,
  "modified": "2024-02-23 16:07:14.906827",
  "module": "CRM Medigo",
  "name": "Remis VMI",
  "script": "frappe.ui.form.on('Remis', {\n    refresh(frm) {\n        // Ceci est appelé à chaque fois que le formulaire est chargé ou rafraîchi\n    },\n    // Écouteur pour les changements dans la table enfant \"liste_remis\"\n    liste_remis_add(frm, cdt, cdn) {\n        let d = locals[cdt][cdn];\n        // Mise à jour du champ \"client\" dans la ligne ajoutée avec la valeur du champ \"client\" du doctype parent\n        frappe.model.set_value(cdt, cdn, 'prescripteur', frm.doc.prescripteur);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Medicale Manager",
  "enabled": 1,
  "modified": "2024-02-23 16:08:35.237116",
  "module": "CRM Medigo",
  "name": "Remis VMM",
  "script": "frappe.ui.form.on('Visite Medicale Manager', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\nfrappe.ui.form.on('Remis', {\n    refresh(frm) {\n        // Ceci est appelé à chaque fois que le formulaire est chargé ou rafraîchi\n    },\n    // Écouteur pour les changements dans la table enfant \"liste_remis\"\n    liste_remis_add(frm, cdt, cdn) {\n        let d = locals[cdt][cdn];\n        // Mise à jour du champ \"client\" dans la ligne ajoutée avec la valeur du champ \"client\" du doctype parent\n        frappe.model.set_value(cdt, cdn, 'prescripteur', frm.doc.prescripteur);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Visite Commerciale Manager",
  "enabled": 1,
  "modified": "2024-02-23 23:58:33.304670",
  "module": "CRM Medigo",
  "name": "Classement Produits VCM",
  "script": "frappe.ui.form.on('Visite Commerciale Manager', {\n    validate(frm) {\n        // Validation pour l'unicité et la contrainte de non-nullité\n        let classements = [\n            frm.doc.classement_1, \n            frm.doc.classement_2, \n            frm.doc.classement_3, \n            frm.doc.classement_4\n        ].filter(Boolean); // Filtrer les valeurs non définies ou vides\n\n        if (classements.length !== new Set(classements).size) {\n            frappe.msgprint(__('Un même article ne peut être sélectionné plus d’une fois dans les champs de classement.'));\n            frappe.validated = false;\n        }\n\n        let rotations = [\n            {field: 'classement_1', rotation: frm.doc.rotation_c1},\n            {field: 'classement_2', rotation: frm.doc.rotation_c2},\n            {field: 'classement_3', rotation: frm.doc.rotation_c3},\n            {field: 'classement_4', rotation: frm.doc.rotation_c4}\n        ];\n\n        rotations.forEach((item, index) => {\n            if (frm.doc[item.field] && item.rotation === 0) {\n                frappe.msgprint(__(`Si un article est sélectionné dans ${item.field}, alors \"rotation_c${index + 1}\" ne doit pas être \"0\".`));\n                frappe.validated = false;\n            }\n        });\n\n        // Validation pour la comparaison séquentielle des rotations\n        for (let i = 0; i < rotations.length - 1; i++) {\n            if (rotations[i].rotation < rotations[i + 1].rotation) {\n                frappe.msgprint(__(`La rotation de \"${rotations[i + 1].field}\" ne peut pas être supérieure à celle de \"${rotations[i].field}\".`));\n                frappe.validated = false;\n                break; // Sortir de la boucle dès qu'une violation est trouvée\n            }\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gestion Des Utilisateurs",
  "enabled": 1,
  "modified": "2024-02-24 14:57:43.722277",
  "module": "CRM Medigo",
  "name": "Demandeur",
  "script": "frappe.ui.form.on('Gestion Des Utilisateurs', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.full_name);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Africa Pass JPIM Dakar 2024",
  "enabled": 0,
  "modified": "2024-02-28 14:48:31.162092",
  "module": "CRM Medigo",
  "name": "Total Points",
  "script": "frappe.ui.form.on('Africa Pass JPIM Dakar 2024', {\n    validate: function(frm) {\n        // Calculer le total des points\n        let total_points = 0;\n        for (let i = 1; i <= 20; i++) {\n            let field_name = `p_q${i}`;\n            if (frm.doc[field_name]) {\n                total_points += parseInt(frm.doc[field_name], 10); // Utilisez toujours une base pour parseInt\n            }\n        }\n\n        // Mettre à jour le champ total_points avec la somme calculée\n        frm.set_value('total_points', total_points);\n\n        // Rafraîchir le champ pour refléter les changements dans l'interface utilisateur\n        frm.refresh_field('total_points');\n    },\n    on_submit: function(frm) {\n        // Actions à exécuter après la soumission du document\n        // Par exemple, afficher un message de confirmation\n        frappe.msgprint(__('Ce document a été soumis avec succès.'));\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Africa Pass JPIM Dakar 2024",
  "enabled": 1,
  "modified": "2024-02-29 21:03:55.944199",
  "module": "CRM Medigo",
  "name": "Q1",
  "script": "frappe.ui.form.on('Africa Pass JPIM Dakar 2024', {\n    onload_post_render: function(frm) {\n        // Exécutez le calcul uniquement si le document est chargé après être enregistré et que le calcul n'a pas encore été effectué\n        if (!frm.is_new() && !frm.doc.calcul_effectue) {\n            let total_points = 0;\n            for (let i = 1; i <= 20; i++) {\n                let field_name = `p_q${i}`;\n                if (frm.doc[field_name]) {\n                    total_points += parseInt(frm.doc[field_name], 10);\n                }\n            }\n\n            // Mettre à jour le champ total_points avec la somme calculée\n            frm.set_value('total_points', total_points);\n\n            // Marquez le calcul comme effectué\n            frm.set_value('calcul_effectue', 1);\n\n            // Rafraîchir le champ pour montrer la valeur mise à jour\n            frm.refresh_field('total_points');\n\n            // Optionnel : sauvegardez le document pour enregistrer les modifications\n            frm.save();\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Africa Pass JPIM Dakar 2024",
  "enabled": 0,
  "modified": "2024-02-29 16:08:53.194774",
  "module": "CRM Medigo",
  "name": "Utilisateur Africa",
  "script": "frappe.ui.form.on('Africa Pass JPIM Dakar 2024', {\n    before_save(frm) {\n        if (!frm.doc.__islocal) return; // Exécuter seulement lors de la création d'un nouveau document\n        // Récupérer le nom complet de l'utilisateur actuellement connecté\n        frappe.call({\n            method: \"frappe.client.get_value\",\n            args: {\n                doctype: \"User\",\n                filters: {\"name\": frappe.session.user},\n                fieldname: [\"full_name\"]\n            },\n            callback: function(r) {\n                if (r.message) {\n                    // Définir la valeur du champ avec le nom complet de l'utilisateur\n                    frm.set_value('utilisateur', r.message.utilisateur);\n                }\n            }\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Web Form",
  "enabled": 0,
  "modified": "2024-02-29 15:49:15.859605",
  "module": "CRM Medigo",
  "name": "Test script client web form",
  "script": "frappe.ready(function () {\n    var user_id = frappe.session.user;\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: user_id\n        },\n        callback: function (data) {\n            if (data.message) {\n                var full_name = data.message.full_name;\n                frappe.web_form.set_value('utilisateur', full_name);\n            }\n        }\n    });\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Objectifs Commerciaux",
  "enabled": 1,
  "modified": "2024-03-04 10:54:02.559062",
  "module": "CRM Medigo",
  "name": "Filtre Utilisateurs",
  "script": "frappe.ui.form.on('Objectifs Commerciaux', {\n    refresh: function(frm) {\n        frm.set_query(\"delegue\", function() {\n            return {\n                filters: {\n                    \"role_profile_name\": [\"in\", [\"Délégue Commercial\",\"Délégué Médico-Commercial\"]]\n                }\n            };\n        });\n    }\n});\n\n",
  "view": "Form"
 }
]